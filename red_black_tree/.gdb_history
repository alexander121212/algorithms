si
n
si
n
p grand_parent 
n
p uncle 
n
si
n
p **node
p (*node)->parent->left
p (*node)->parent->right
p (*node)->parent
p *(*node)->parent
q
b main
r
n
n
si
b insert
n
q
b main
r
n
p *root
si
n
p *root->left
n
n
p *root->right
n
b insert
c
n
si
n
si
n
si
n
si
n
p *root
p *root->left
p *root->right
p *root->left->left
q
b main
r
n
p data[i]
si
n
b insert
c
n
c
n
si
p *node
si
n
si
n
si
n
si
n
n
q
r
bt
q
b main
r
n
n
p data[i]
n
si
n
p *inserted
si
p *root
p **root
p **root->left
p *root->left
n
n
si
n
p *root->left
p *root->left->left
p *root->left->left->right
si
b case1
b case2
b case3
b case4
n
si
n
si
n
p uncle 
n
si
n
p *gparent 
n
n
si
n
p *gparent 
si
n
q
r
q
b main
r
n
p data[i]
n
q
b case5
r
n
si
n
p data[i]
p *root
p *root->left
p *root->left->left
p *root->left->left->left
p *root->left->left->left->left
q
r
p *node
p *node->left
p *node
p **node
q
r
q
b main
r
n
n
b rotate_left 
b rotate_right 
c
list
si
n
p **node
p **parent
si
si
p *parent->parent
p **parent
n
p *parent->parent
p *parent->parent->left
n
si
n
p *root
p *root->left
p *root->left>left
p *root->left->left
q
r main
b main
r
n
p *root
q
r
p old
p *root
p *root->left
p *root->left->left
p *root->left->left->left
p *root->left->left->right
q
b balance_tree 
r
n
p *node
n
c
q
b main
r
n
p data[i]
si
n
b balance_tree 
si
p *root
n
p *root
p *root->left
p *root->right
p *root->right->right
p *root->right->right->left
si
n
p *parent
n
p *gparent
si
n
p gparent
p *gparent
list
list 257
p *tmp
q
r
bt
q
b main
r
n
n
si
n
si
n
p *parent
n
p *gparent
n
n
p *tmp
n
n
p *tmp
p node
n
p gparent
p *gparent
p *tmp
n
n
p *parent
n
p tmp
q
